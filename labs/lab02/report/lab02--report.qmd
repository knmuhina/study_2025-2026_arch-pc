---
# Author
author:
  name: Мухина Ксения Николаевна
  email: 1032253531@pfur.ru
  affilation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 115419
      city: Москва
      address: ул. Орджоникидзе, д. 3

## Title
title: "Отчёт по лабораторной работе №2"
subtitle: "Дисциплина: Архитектура компьютеров"
licence: "CC BY-NC"
---

# Цель работы

Изучить применение средств контроля версий и приобрести практические навыки по работе с системой контроля версий Git.

# Выполнение лабораторной работы

Далее описываемая работа была выполнена на виртуальной машине Oracle VirtualBox с ОС Linux Ubuntu.

1. Настройка GitHub

Существует несколько серверов репозиториев с возможностью бесплатного размещения данных. Например: bitbucket, GitHub, GitFlic.

В данной лабораторной работе мы будем использовать сервер GitHub. Для этого уже была создана учётная запись на сайте https://github.com.

2. Базовая настройка Git

Перед началом работы в GitHub мы сделаем предварительную конфигурацию git, используя терминал. Все настройки, соответствующие указаниям к лабораторной работе, показаны в изображении ниже.

![Рис. 1. Конфигурация git.](image/shot-01.png){#shot-01 width=70%}

3. Создание SSH-ключа

Для идентификации пользователя на сервере репозиториев сгенерируем приватный и открытый ключи при помощи команды ssh-keygen.

![Рис. 2. Создание SSH-ключа.](image/shot-02.png){#shot-02 width=70%}

Оба ключа сохранены в каталог ~/.ssh/: приватный – в каталог id_ed25519, а открытый – в файл ‘id_ed25519.pub’.

Далее загрузим сгенерированный открытый ключ на сайт GitHub. Перед этим скопируем его, используя ключи команды cat.

![Рис. 3. Копирование ключа при помощи cat.](image/shot-03.png){#shot-03 width=70%}

На сайте https://github.com перейдём в ‘Settings > SSH and GPG keys’ , выберем опцию ‘New SSH key’ и вставим скопированный ключ в появившееся поле, задав ключу имя.

![Рис. 4. Добавление SHH-ключа на https://github.com.](image/shot-04.png){#shot-04 width=70%}

Публичный ключ был добавлен на GitHub под именем L2, указывающим, что ключ является частью текущей лабораторной работы.

4. Создание рабочего пространства и репозитория курса на основе шаблона

При выполнении этой и следующих лабораторных работ по данной дисциплине мы будем придерживаться определённой структуры рабочего пространства, описанной ниже:

~/work/study/2025-2026/Архитектура компьютеров/arch-pc/

Используя терминал, создадим каталог для дисциплины "Архитектура компьютеров".

![Рис. 5. Создание каталога для будущего репозитория.](image/shot-05.png){#shot-05 width=70%}

5. Создание репозитория курса на основе шаблона

Перейдём на [страницу репозитория с шаблоном курса](https://github.com/yamadharma/course-directory-student-template) и используем его, выбрав опцию ‘Use this template’.

![Рис. 6. Страница шаблона репозитория курса.](image/shot-06.png){#shot-06 width=70%}

В открывшемся окне мы назвали репозиторий study_2025-2026_arch-pc и создали его.

Далее мы вернёмся в терминал, перейдём в каталог курса и клонируем созданный репозиторий при помощи git clone.

![Рис. 7. Клонирование репозитория в каталог.](image/shot-07.png){#shot-07 width=70%}

Репозиторий был успешно клонирован в наш каталог.

6. Настройка каталога курса

Перейдём в каталог курса, затем создадим необходимые каталоги и отправим их на сервер, введя перед этим несколько команд.

![Рис. 8. Настройка каталога курса.](image/shot-08.png){#shot-08 width=70%}

Результат работы команды git commit показан неполностью, так как демонстрация изменений в данном случае не обязательна.

Отправим каталоги при помощи команды git push и используем ls, чтобы убедиться в правильности создания иерархии рабочего пространства в локальном репозитории.

![Рис. 9. Отправка каталогов на сервер при помощи git push.](image/shot-09.png){#shot-09 width=70%}

Убедимся в правильности создания иерархии на странице GitHub.

![Рис. 10. Рабочее пространство на странице GitHub.](image/shot-10.png){#shot-10 width=70%}

Все действия были проделаны корректно.

# Задания для самостоятельной работы

В соответствии с заданиями, указанными в лабораторной работе №3, данный отчёт будет создан в соответствующем каталоге рабочего пространства. Также отчёт будет скомпилирован в форматах .pdf и .docx. Данные файлы будут загружены на GitHub.

# Выводы

В ходе выполнения лабораторной работы мы изучили применение средств контроля версий и приобрели практические навыки по работе с системой контроля версий Git путём работы с репозиторием на сервере репозиториев GitHub.

# Список литературы{.unnumbered}

1. Файл ["Лабораторная работа №2. Система контроля версий Git.pdf"](https://esystem.rudn.ru/mod/resource/view.php?id=1297701)
